#if some error while runing dvc, rum "dvc init" on the terminal
# run this use "dvc repro"
# most use common keys, first -> stage_name:
# secondly -> cmd: what you want to run
# third one is, dependensies(deps): should pass as a list (in any yaml file if you 
#    '-' it means it is a list')
# then use params: what we use from the params.yaml file
# outs: it meas what you going to take output from the stage

stages:
  data_ingestion:
    cmd: python src/deepClassifier/pipeline/stage_01_data_ingestion.py
    deps:
      - src/deepClassifier/pipeline/stage_01_data_ingestion.py
      - configs/config.yaml
    outs:
      - artifacts/data_ingestion/PetImages

  prepare_base_model:
    cmd: python src/deepClassifier/pipeline/stage_02_prepare_base_model.py
    deps:
      - src/deepClassifier/pipeline/stage_02_prepare_base_model.py
      - configs/config.yaml
    params:
      - IMAGE_SIZE
      - INCLUDE_TOP
      - CLASSES
      - WEIGHTS
      - LEARNING_RATE
    outs:
      - artifacts/prepare_base_model


  training:
    cmd: python src/deepClassifier/pipeline/stage_03_training.py
    deps:
      - src/deepClassifier/pipeline/stage_03_training.py
      - src/deepClassifier/components/prepare_callback.py
      - configs/config.yaml
      - artifacts/data_ingestion/PetImages
      - artifacts/prepare_base_model
    params:
      - IMAGE_SIZE
      - EPOCHS
      - BATCH_SIZE
      - AUGMENTATION
    outs:
      - artifacts/training/model.h5

  evaluation:
    cmd: python src/deepClassifier/pipeline/stage_04_evaluation.py
    deps:
      - src/deepClassifier/pipeline/stage_04_evaluation.py
      - configs/config.yaml
      - artifacts/data_ingestion/PetImages
      - artifacts/training/model.h5
    params:
      - IMAGE_SIZE
      - BATCH_SIZE
    metrics:
    - scores.json:
        cache: false